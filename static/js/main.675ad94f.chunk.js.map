{"version":3,"sources":["Search.js","Drawing.js","App.js","serviceWorker.js","index.js"],"names":["_","require","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","onUpdate","setState","state","value","login","label","options","_this2","fetch","then","response","json","data","map","item","key","assign","react_default","a","createElement","react_select_esm","onChange","Component","color","in progress","checking","checked","todo","Drawing","getGithubName","concat","githubLogin","toLowerCase","getDataFromServer","localStorage","setItem","mentor","getItem","styleCV","parseInt","cv","styleCoreJS","corejs","styleMarkup","markup","styleActivist","activist","styleYoutube","youtube","styleScoreboard","scoreboard","styleGame","game","styleCourseWork","stylePresentation","presentation","style","background","newMentor","window","performance","navigation","type","removeItem","src_Search","Table","firebase","initializeApp","apiKey","authDomain","App","isSignedIn","uiConfig","signInFlow","signInOptions","auth","GithubAuthProvider","PROVIDER_ID","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","singOut","signOut","className","src_Drawing","currentUser","providerData","uid","onClick","StyledFirebaseAuth_default","firebaseAuth","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.675ad94f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst _ = require('lodash');\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOption: { value: this.props.login, label: this.props.login },\r\n      options: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://localhost:3001/')\r\n      .then(response => response.json())\r\n      .then(data => _.map(data, (item, key) => Object.assign({\r\n        value: key,\r\n        label: key,\r\n      })))\r\n      .then(data => this.setState({\r\n        options: data,\r\n      }));\r\n  }\r\n\r\n  handleChange = (selectedOption) => {\r\n    const { onUpdate } = this.props;\r\n    this.setState({ selectedOption });\r\n    onUpdate({ selectedOption });\r\n  }\r\n\r\n  render() {    \r\n    const { selectedOption } = this.state;\r\n    const { options } = this.state;\r\n    return (\r\n      <div>\r\n        <Select\r\n          value={selectedOption}\r\n          onChange={this.handleChange}\r\n          options={options}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearch.propTypes = {\r\n  onUpdate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Search from './Search';\r\n\r\nconst _ = require('lodash');\r\n\r\nconst color = {\r\n  'in progress': 'yellow',\r\n  checking: 'red',\r\n  checked: 'DarkRed',\r\n  todo: 'grey',\r\n};\r\n\r\nclass Drawing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: [],\r\n      githubLogin: '',\r\n    };\r\n    const TYPE_RELOAD = 1;\r\n    if (window.performance) {\r\n      if (performance.navigation.type === TYPE_RELOAD) {\r\n        localStorage.removeItem('login');\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getGithubName();\r\n  }\r\n\r\n  getGithubName = () => {\r\n    const { login } = this.props;\r\n    fetch(`https://api.github.com/user/${login}`)\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          githubLogin: data.login.toLowerCase(),\r\n        });\r\n        this.getDataFromServer();\r\n        return data.login;\r\n      })\r\n      .then(data => localStorage.setItem('mentor', data.toLowerCase()));\r\n  }\r\n\r\n  getDataFromServer = () => {\r\n    const { githubLogin } = this.state;\r\n    const mentor = localStorage.getItem('login') ? localStorage.getItem('mentor') : githubLogin;\r\n    fetch('http://localhost:3001/')\r\n      .then(response => response.json())\r\n      .then(data => data[mentor])\r\n      .then(data => _.map(data, (item, key) => {\r\n        const styleCV = (parseInt(item.cv, 10) || parseInt(item.cv, 10) === 0) ? 'green' : color[item.cv];\r\n        const styleCoreJS = (parseInt(item.corejs, 10) || parseInt(item.corejs, 10) === 0) ? 'green' : color[item.corejs];\r\n        const styleMarkup = (parseInt(item.markup, 10) || parseInt(item.markup, 10) === 0) ? 'green' : color[item.markup];\r\n        const styleActivist = (parseInt(item.activist, 10) || parseInt(item.activist, 10) === 0) ? 'green' : color[item.activist];\r\n        const styleYoutube = (parseInt(item.youtube, 10) || parseInt(item.youtube, 10) === 0) ? 'green' : color[item.youtube];\r\n        const styleScoreboard = (parseInt(item.scoreboard, 10) || parseInt(item.scoreboard, 10) === 0) ? 'green' : color[item.scoreboard];\r\n        const styleGame = (parseInt(item.game, 10) || parseInt(item.game, 10) === 0) ? 'green' : color[item.game];\r\n        const styleCourseWork = (parseInt(item['course work'], 10) || parseInt(item['course work'], 10) === 0) ? 'green' : color[item['course work']];\r\n        const stylePresentation = (parseInt(item.presentation, 10) || parseInt(item.presentation, 10) === 0) ? 'green' : color[item.presentation];\r\n\r\n        return (\r\n          <tr key={key}>\r\n            <td>{key}</td>\r\n            <td style={{ background: styleCV }}>{item.cv}</td>\r\n            <td style={{ background: styleCoreJS }}>{item.corejs}</td>\r\n            <td style={{ background: styleMarkup }}>{item.markup}</td>\r\n            <td style={{ background: styleActivist }}>{item.activist}</td>\r\n            <td style={{ background: styleYoutube }}>{item.youtube}</td>\r\n            <td style={{ background: styleScoreboard }}>{item.scoreboard}</td>\r\n            <td style={{ background: styleGame }}>{item.game}</td>\r\n            <td style={{ background: styleCourseWork }}>{item['course work']}</td>\r\n            <td style={{ background: stylePresentation }}>{item.presentation}</td>\r\n          </tr>\r\n        );\r\n      }))\r\n      .then(data => this.setState({\r\n        options: data,\r\n      }))\r\n      .then(localStorage.setItem('login', 'success'));\r\n  }\r\n\r\n  handleChange = (newMentor) => {\r\n    localStorage.setItem('mentor', newMentor.selectedOption.value);\r\n    this.getDataFromServer();\r\n  }\r\n\r\n  render() {\r\n    const { options } = this.state;\r\n    const { githubLogin } = this.state;\r\n    return (\r\n      <div>\r\n        { githubLogin && localStorage.getItem('login') ? (\r\n          <div>\r\n            <Search onUpdate={this.handleChange} login={githubLogin} />\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th />\r\n                  <th>CV</th>\r\n                  <th>CoreJS</th>\r\n                  <th>Markup</th>\r\n                  <th>Activist</th>\r\n                  <th>Youtube</th>\r\n                  <th>Scoreboard</th>\r\n                  <th>Game</th>\r\n                  <th>Course work</th>\r\n                  <th>Presentation</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {options}\r\n              </tbody>\r\n            </Table>\r\n          </div>) : ('Loading')\r\n       }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDrawing.propTypes = {\r\n  login: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Drawing;\r\n","import React, { Component } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\nimport Drawing from './Drawing';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyBJEDmqx_T5oLr4zyIkLN_hdT7BswaDrjQ',\r\n  authDomain: 'rss-mentor-dashboard-c9bf6.firebaseapp.com',\r\n});\r\n\r\n\r\nclass App extends Component {\r\n  state = { isSignedIn: false }\r\n\r\n  uiConfig = {\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n      firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false,\r\n    },\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      this.setState({ isSignedIn: !!user });\r\n    });\r\n  }\r\n\r\n  singOut = () => {\r\n    firebase.auth().signOut();\r\n    localStorage.removeItem('login');\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {isSignedIn ? (\r\n          <div>\r\n            <Drawing login={firebase.auth().currentUser.providerData[0].uid} />\r\n            <button type=\"submit\" onClick={() => this.singOut()}>Sign out!</button>\r\n          </div>\r\n        ) : (\r\n          <StyledFirebaseAuth\r\n            uiConfig={this.uiConfig}\r\n            firebaseAuth={firebase.auth()}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n  // [::1] is the IPv6 localhost address.\r\n  || window.location.hostname === '[::1]'\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  || window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n  ),\r\n);\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((data) => {\r\n      const registration = data;\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n            + 'worker. To learn more, visit http://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}